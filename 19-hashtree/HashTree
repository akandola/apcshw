Difference between:
	1) HashMap and HashSet:
A hashmap is assigning a value to a key and putting it into a list. You can repeat values, and it can be unsynchronized. It allows null for both key and value. 
A hashset doesn't allow duplicate values, and provides an add method, and a contain method to see if the value is already in the hashset. It maintains a unique list. The hashmap as keyed access to each value, whereas the set is an unordered collection.


	2) TreeMap and TreeSet
They are both sorted collections, but they implement different interfaces (Map vs. Set, respectively). TreeSet only stores obe object but TreeMap, similar to HashMap, stores 2 objects (a key and value, where the key accesses the value). TreeSet doens't allow duplicate objects but you can have duplicate values in TreeMap (probably because keys can differentiate). 


	How a HashMap is implemented: 
Implementing a map interface, a Hashmap then stores an object which stores both keys and values and assigns keys to values. The put() method are instances of HashMaps, adding the key/value to an array. But when put() is called, hashcode of a hashfunction, which changes the properties of the value are run on the object's value. There is also a get method. If there are equal values, you run a keys.equal() test to check for true equality. If it exists, then the two key objects will be treated as one and the same.


	How a TreeMap is implemented:
A treemap similary implements a map, storing a key and value in an object, and implements NavigableMap. The object's key has a compare method, implementing the Comparable interface. 

Speed Comparison of HashMaps and TreeMaps and Observations:
In TreeMap, elements are sorted, but in HashMap, elements are unsorted. However, unless there is a specific need for ordering, a HashMap appears to be faster. 100K elements takes about 65 milliseconds for a HashMap, and 100 milliseconds for a TreeMap. HashMaps are about O(1) in runtime whereas TreeMaps are O(log n) in terms of runtime. 


Java's built in Heap data structure but not named heap is: PriorityQueue (implemented with Min-Heap). 


